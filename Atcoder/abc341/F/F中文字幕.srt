76
00:03:16,533 --> 00:03:19,833
并选择与棋子所在顶点相邻的几个顶点。

77
00:03:19,833 --> 00:03:22,633
所选顶点的总重量

78
00:03:22,633 --> 00:03:25,400
必须小于有碎片的顶点的重量。

79
00:03:25,400 --> 00:03:27,633
然后，移除选中的棋子

80
00:03:27,633 --> 00:03:29,833
并在所选顶点上各放置一块。

81
00:03:29,833 --> 00:03:33,033
这一系列操作可以重复多少次？

82
00:03:33,033 --> 00:03:36,433
如果选中一块后无处可去，唯一的选择就是把它移走，对吗？

83
00:03:36,433 --> 00:03:36,967
啊，是的

84
00:03:36,967 --> 00:03:40,667
顶点和边的数量以及权重都达到了 5000，而且还有很多棋子。

85
00:03:41,667 --> 00:03:43,133
听起来很复杂，但是、

86
00:03:43,133 --> 00:03:44,533
你说 "小于"，对吗？

87
00:03:44,533 --> 00:03:46,767
所以，无向图的事是个谎言、

88
00:03:46,767 --> 00:03:49,533
这是一条从大到小的单行道。

89
00:03:49,533 --> 00:03:50,800
那么这是一个 DAG。

90
00:03:50,800 --> 00:03:52,900
那么，我们就按升序来看。

91
00:03:52,900 --> 00:03:54,733
因为棋子之间没有相互作用、

92
00:03:54,733 --> 00:03:58,000
如果我们知道一个棋子可以进行多少次操作、

93
00:03:58,000 --> 00:04:01,433
这就好比解决了 N 次背包问题。


通过www.DeepL.com/Translator（免费版）翻译